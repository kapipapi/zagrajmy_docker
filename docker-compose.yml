version: "3.8"
services:

  api_gateway:
    container_name: api_gateway
    build:
      context: ./docker/haproxy
      dockerfile: Dockerfile
    restart: always
    ports:
      - "80:80"
      - "443:443"
    networks:
      - app

  db:
    container_name: db
    build: docker/postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./data/db:/var/lib/postgresql/data
      - ./docker/postgres:/docker-entrypoint-initdb.d
    networks:
      - app

  pgadmin:
    user: 5050:5050
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: "${PGADMIN_DEFAULT_EMAIL}"
      PGADMIN_DEFAULT_PASSWORD: "${PGADMIN_DEFAULT_PASSWORD}"
      PGDATA: /var/lib/pgadmin/data
    volumes:
      - ./data/pgadmin:/var/lib/pgadmin
    networks:
      - app


  backend:
    container_name: backend
    build: backend
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - db
      - pgadmin
    networks:
      - app

  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    environment:
      - CHOKIDAR_USEPOLLING=true
      - DANGEROUSLY_DISABLE_HOST_CHECK=true
      - PORT=8080
    volumes:
      - ./frontend:/app
    networks:
      - app

  keycloak:
    container_name: keycloak
    image: jboss/keycloak:${KEYCLOAK_VERSION}
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: db
      DB_DATABASE: keycloak
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_SCHEMA: public
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
    depends_on:
      - db
    networks:
      - app

networks:
  app:

volumes:
  db:
    driver: local